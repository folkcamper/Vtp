package Vtp::Vtprc;
use Exporter;
our @ISA = qw(Exporter);
use Pdt::L;
push @ISA, qw(Pdt::L);
our @EXPORT = qw($T);
our $T;
use strict;
1;

#: dot vtprc template file

__DATA__
#! /bin/bash

### STARTUP

# STOP! Do not edit this file. Use setvtprc.pl 
# or edit the module Vtp::Vtprc This file is 
# written and sourced dynamically and
# frequently. .vtprc should also be sourced
# at the very end of your .bashrc like so:
#
# source $HOME/.vtprc

export VTP_VTPRC=$HOME/.vtprc

### Where the proggies may be system located

export VTP_BIN_PATH=/Skel/Vtp/bin

### Here we define whether integration features 
### with PDT and FVWM can be used. 

export VTP_USE_FVWM=1
export VTP_USE_PDT=1

### GEOMETRY STRINGS

# these geometries are fed to ffmpeg so it can 
# do video and image capturing

export VTP_VIDEOGEOM=<TMPL_VAR NAME=vtp_videogeom>

export VTP_IMAGEGEOM=<TMPL_VAR NAME=vtp_imagegeom>

# these resolutions are used for defining target 
# directories for storing recordings. 

export VTP_VIDEORES=<TMPL_VAR NAME=vtp_videores>

export VTP_IMAGERES=<TMPL_VAR NAME=vtp_imageres>

# these prefixes are used for defining storage 
# for defining write filenames. 

export VTP_VIDEOPREFIX=<TMPL_VAR NAME=vtp_videoprefix>

export VTP_IMAGEPREFIX=<TMPL_VAR NAME=vtp_imageprefix>

export VTP_AUDIOPREFIX=<TMPL_VAR NAME=vtp_audioprefix>

# these are stored pids so that we can start 
# stop programs independently. 

export VTP_VIDEOPID=<TMPL_VAR NAME=vtp_videopid>

export VTP_IMAGEPID=<TMPL_VAR NAME=vtp_imagepid>

export VTP_AUDIOPID=<TMPL_VAR NAME=vtp_audiopid>

# files for post processing

export VTP_VIDEOFILE=<TMPL_VAR NAME=vtp_videofile>

export VTP_IMAGEFILE=<TMPL_VAR NAME=vtp_imagefile>

export VTP_AUDIOFILE=<TMPL_VAR NAME=vtp_audiofile>


